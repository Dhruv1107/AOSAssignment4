# AOSAssignment4
1) Name = Dhruv Bhatnagar
   BITS Student ID No: 2021H1030047G
2) Files:
	main.c = Driver file it is used to call other modules
	multiplycomplexnumbers.c = Used to multiply n complex numbers using threads
	complexnumbers.h = Interface file that contains method signatures and shared memory variables
	makefile = creates linkable files and executables
	input.txt = first line contains num of complex numbers(say n), and the remaining lines has all the  n complex numbers
	
3) Compilation = make

4) Execution = ./complexnumbers input.txt
	
5) Structure of the Program( the whole logic is in multiplyComplexNumbers function in multiplycomplexnumbers.c)
	a)	Create noOfThreads which is equal to floor(index/2) and each thread multiplies 2 complex numbers in the runner function
	b)	We wait until all the threads are completed, and store the multiplication result of each of these threads that were computed in runner1 function in nextNums
	c)	Base condition if no of threads = 1,
			i) if index is odd then there is an extra complex number, so we create another thread with runner2 as function which multiplies last remaining complex number with the result
			ii) if index is even, then there is no extra complex numbers so we return the result that we get from pthread_join
	d)	We recursively call the same function with 'nextNums' and 'i' as parameters
	e)	At the end we print the final ans from the Main Thread

6) Completed:
	Printing the multiplication of n number of complex numbers using threads and it working for both even and odd num of complex numbers
   Not Completed: N/A
   
8) Bugs: In my short period of testing I couldn't find any bugs

Github link to my code: https://github.com/Dhruv1107/AOSAssignment4


		
			

